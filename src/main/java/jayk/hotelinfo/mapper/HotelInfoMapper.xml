<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jayk.hotelinfo.mapper.HotelInfoMapper">
	<select id="navListLoca">
		 select distinct hotel_location1 from hotel
	</select>
	<select id="navListThema">
	select distinct hotel_thema from hotel
	</select>
	
	<select id="hotelList">
		SELECT h.hotel_id as hotelId, h.hotel_name,
		h.hotel_thema,
		h.hotel_location1, h.hotel_location2, h.hotel_image,
		MIN(i.room_price) AS room_price,
		NVL(COUNT(r.review_point), 0) AS
		rcount,
		NVL(ROUND(AVG(r.review_point), 1), 0) AS avgpoint,
		NVL((ROUND(AVG(r.review_point), 1)*2 *10),0) as avgstar
		FROM hotel h
		full outer JOIN room_info i ON
		h.hotel_id = i.hotel_id
		full outer JOIN
		review r ON h.hotel_id =
		r.hotel_id
		GROUP BY h.hotel_id, h.hotel_name,
		h.hotel_thema,
		h.hotel_location1,
		h.hotel_location2, h.hotel_point,
		h.hotel_image
	</select>
	
	<select id="hotelListLoca">
				SELECT h.hotel_id as hotelId, h.hotel_name,
		h.hotel_thema,
		h.hotel_location1, h.hotel_location2, h.hotel_image,
		MIN(i.room_price) AS room_price,
		NVL(COUNT(r.review_point), 0) AS
		rcount,
		NVL(ROUND(AVG(r.review_point), 1), 0) AS avgpoint,
		NVL((ROUND(AVG(r.review_point), 1)*2 *10),0) as avgstar
		FROM hotel h
		full outer JOIN room_info i ON
		h.hotel_id = i.hotel_id
		full outer JOIN
		review r ON h.hotel_id =
		r.hotel_id
        where hotel_location1 = #{hotelLocation1}
		GROUP BY h.hotel_id, h.hotel_name,
		h.hotel_thema,
		h.hotel_location1,
		h.hotel_location2, h.hotel_point,
		h.hotel_image
	</select>
	
	<select id="hotelListThema">
		SELECT h.hotel_id as hotelId, h.hotel_name,
		h.hotel_thema,
		h.hotel_location1, h.hotel_location2, h.hotel_image,
		MIN(i.room_price) AS room_price,
		NVL(COUNT(r.review_point), 0) AS
		rcount,
		NVL(ROUND(AVG(r.review_point), 1), 0) AS avgpoint,
		NVL((ROUND(AVG(r.review_point), 1)*2 *10),0) as avgstar
		FROM hotel h
		full outer JOIN room_info i ON
		h.hotel_id = i.hotel_id
		full outer JOIN
		review r ON h.hotel_id =
		r.hotel_id
        where hotel_thema = #{hotelThema}
		GROUP BY h.hotel_id, h.hotel_name,
		h.hotel_thema,
		h.hotel_location1,
		h.hotel_location2, h.hotel_point,
		h.hotel_image
	</select>

	<select id="selectHotel" parameterType="Map">
		SELECT h.hotel_id as
		hotelId, h.hotel_name, h.hotel_thema,
		h.hotel_location1,
		h.hotel_location2, h.hotel_image,
		MIN(i.room_price) AS room_price,
		NVL(COUNT(r.review_point), 0) AS rcount,
		NVL(ROUND(AVG(r.review_point), 1), 0) AS avgpoint,
		NVL((ROUND(AVG(r.review_point), 1)*2 *10),0) as avgstar,
		h.location_detail
		FROM hotel h
		full outer JOIN room_info i ON
		h.hotel_id
		= i.hotel_id
		full outer JOIN review r ON h.hotel_id =
		r.hotel_id
		where
		h.hotel_location1 = #{hotelLocation1} and h.hotel_id = #{hotelId}
		GROUP BY h.hotel_id, h.hotel_name, h.hotel_thema,
		h.hotel_location1,
		h.hotel_location2, h.hotel_point, h.hotel_image, h.location_detail
	</select>

	<select id="roomList">
		select * from room_info where hotel_id = #{hotelId}
		order by room_id
	</select>

	<select id="reviewList">
		select * from review where hotel_id = #{hotelId}
		order by review_id
	</select>

	<select id="similarList">

<![CDATA[
   SELECT h.hotel_id as hotelId, h.hotel_name, h.hotel_thema,
		h.hotel_location1, h.hotel_location2, h.hotel_image,
		MIN(i.room_price) AS room_price,
		NVL(COUNT(r.review_point), 0) AS rcount,
		NVL(ROUND(AVG(r.review_point), 1), 0) AS avgpoint
		FROM hotel h
		full outer JOIN room_info i ON
		h.hotel_id = i.hotel_id
		full outer JOIN review r ON h.hotel_id =
		r.hotel_id
         where h.hotel_location1 = #{hotelLocation1} and h.hotel_id != #{hotelId} and rownum <= 3
		GROUP BY h.hotel_id, h.hotel_name, h.hotel_thema,
		h.hotel_location1,
		h.hotel_location2, h.hotel_point, h.hotel_image
        order by h.hotel_id
]]>
	</select>

	<select id="adminHotelList">
		select * from hotel
	</select>

	<select id="selectAdminHotel">
		select * from hotel
		where hotel_id = #{hotelId}
	</select>

	<select id="selectAdminHotelRoom">
		SELECT *
		from room_info i
		full outer join room_image m on i.room_id = m.room_id
		where i.hotel_id=#{hotelId} and i.room_id=#{roomId}
	</select>

	<update id="updateAdminHotel">
		update hotel set hotel_name=#{hotelName},
		hotel_location1=#{hotelLocation1}, hotel_location2=#{hotelLocation2}
		where hotel_id = #{hotelId}
	</update>

	<update id="updateAdminHotelRoom">
			update room_info
			set room_name=#{roomName}, room_expain=#{roomExpain},
			room_grade=#{roomGrade}, room_price=#{roomPrice},
			room_max=#{roomMax},	
			room_min=#{roomMin}, add_price=#{addPrice}
			where hotel_id=#{hotelId} and room_id=#{roomId}
	</update>


	<insert id="insertAdminHotel">
		insert into hotel (hotel_id, hotel_name,
		hotel_location1, hotel_location2, hotel_image,location_detail)
		values(#{hotelId}, #{hotelName}, #{hotelLocation1},
		#{hotelLocation2}, #{hotelImage}, #{locationDetail})
	</insert>
	
	<insert id="insertAdminRoom" parameterType="hi">
		insert into room_info (hotel_id, room_id, room_name, room_price, room_max, room_min, add_price)
		values (#{hotelId}, #{roomId}, #{roomName}, #{roomPrice},#{roomMax},#{roomMin}, #{addPrice})
	</insert>
	
	<insert id = "insertAdminRoomImage" parameterType="hi">
		insert into room_image values (#{imageId}, #{roomId}, #{image}, #{hotelId})
	</insert>
	
	<insert id="insertAdminRoomDetail" parameterType="hi">
		insert into room_detail values(#{roomId}, #{parking}, #{wifi}, #{pet}, #{pool}, #{hotelId}, #{singleRoom}, #{twinRoom}, #{doubleRoom}, #{tripleRoom}, #{breakfast})
	</insert>
	
	
</mapper>